- name: Deploy VM
  hosts: all
  tasks: 
  - name: Deploy VM
    redhat.openshift.k8s:
      state: present
      definition:
        apiVersion: kubevirt.io/v1
        kind: VirtualMachine
        metadata:
          name: "{{ vm_name }}"
          namespace: "{{ namespace }}"
          labels:
            app: catalog-vm
            vm.kubevirt.io/template: "{{ vm_template }}"
            vm.kubevirt.io/template.namespace: openshift
            vm.kubevirt.io/template.revision: '1'
            vm.kubevirt.io/template.version: v0.23.4
        spec:
          dataVolumeTemplates:
            - metadata:
                creationTimestamp: null
                name: "{{ vm_name }}"
                namespace: aap2-workspace
              spec:
                preallocation: false
                sourceRef:
                  kind: DataSource
                  name: "{{ datasource_name }}"
                  namespace: openshift-virtualization-os-images
                storage:
                  resources:
                    requests:
                      storage: "{{ storage_size  }}Gi"
                  storageClassName: sno-storage
          running: true
          template:
            metadata:
              annotations:
                vm.kubevirt.io/flavor: "{{ flavor }}"
                vm.kubevirt.io/os: rhel8
                vm.kubevirt.io/workload: "{{ workload }}"
              creationTimestamp: null
              labels:
                kubevirt.io/domain: "{{ vm_name }}"
                kubevirt.io/size: "{{ size }}"
            spec:
              domain:
                cpu:
                  cores: "{{ cores }}"
                  sockets: "{{ sockets }}"
                  threads: "{{ threads }}"
                devices:
                  disks:
                    - bootOrder: 1
                      disk:
                        bus: virtio
                      name: rootdisk
                    - bootOrder: 2
                      disk:
                        bus: virtio
                      name: cloudinitdisk
                  interfaces:
                    - masquerade: {}
                      name: default
                  networkInterfaceMultiqueue: true
                  rng: {}
                machine:
                  type: pc-q35-rhel8.6.0
                resources:
                  requests:
                    memory: "{{ memory }}Gi"
              evictionStrategy: LiveMigrate
              networks:
                - name: default
                  pod: {}
              terminationGracePeriodSeconds: 180
              volumes:
                - dataVolume:
                    name: "{{ vm_name }}"
                  name: rootdisk
                - cloudInitConfigDrive:
                    userData: >-
                      #cloud-config
                      ssh_pwauth: True
                      users:
                        - name: "{{ user }}"
                          shell: /bin/bash
                          sudo: ['ALL=(ALL) NOPASSWD:ALL']
                      chpasswd:
                        list: |
                          "{{ user }}:{{ password }}"
                        expire: False
                      hostname: "{{ hostname }}"
                  name: cloudinitdisk 
