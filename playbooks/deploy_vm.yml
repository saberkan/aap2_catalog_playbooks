---
- name: Deploy VM with user and ssh access
  hosts: all
  tasks: 
  - name: Deploy user credentials secret
    redhat.openshift.k8s:
      state: present
      definition:
        kind: Secret
        apiVersion: v1
        metadata:
          name: "{{ vm_name }}-startup-script"
          namespace: "{{ namespace }}"
        stringData:
          userdata: |
            #!/bin/bash

            # Variables
            export NEW_USER="{{ user }}"
            export PASSWORD="{{ password }}"
            export SSH_PUB_KEY="{{ ssh_pub_key }}"
            export HOSTNAME="{{ hostname }}"

            # Change user password and ssh cert for authent
            sudo adduser -U -m $NEW_USER
            echo "$NEW_USER:$PASSWORD" | chpasswd
            sudo mkdir /home/$NEW_USER/.ssh
            sudo echo "$SSH_PUB_KEY" > /home/$NEW_USER/.ssh/authorized_keys
            sudo chown -R ${NEW_USER}: /home/$NEW_USER/.ssh

            # Make sudoer passwordless
            sudo usermod -aG wheel $NEW_USER
            sudo echo -e "$NEW_USER\tALL=(ALL)\tNOPASSWD: ALL" > /etc/sudoers.d/020_$NEW_USER
            
            # Set hostname
            sudo hostnamectl set-hostname $HOSTNAME
  - name: Deploy VM
    redhat.openshift.k8s:
      state: present
      definition:
        apiVersion: kubevirt.io/v1
        kind: VirtualMachine
        metadata:
          name: "{{ vm_name }}"
          namespace: "{{ namespace }}"
          labels:
            app: catalog-vm
            vm.kubevirt.io/template: "{{ vm_template }}"
            vm.kubevirt.io/template.namespace: openshift
            vm.kubevirt.io/template.revision: '1'
            vm.kubevirt.io/template.version: v0.23.4
        spec:
          dataVolumeTemplates:
            - metadata:
                creationTimestamp: null
                name: "{{ vm_name }}"
                namespace: aap2-workspace
              spec:
                preallocation: false
                sourceRef:
                  kind: DataSource
                  name: "{{ datasource_name }}"
                  namespace: openshift-virtualization-os-images
                storage:
                  resources:
                    requests:
                      storage: "{{ storage_size  }}Gi"
                  storageClassName: sno-storage
          running: true
          template:
            metadata:
              annotations:
                vm.kubevirt.io/flavor: "{{ flavor }}"
                vm.kubevirt.io/os: rhel8
                vm.kubevirt.io/workload: "{{ workload }}"
              creationTimestamp: null
              labels:
                kubevirt.io/domain: "{{ vm_name }}"
                kubevirt.io/size: "{{ size }}"
            spec:
              domain:
                cpu:
                  cores: "{{ cores }}"
                  sockets: "{{ sockets }}"
                  threads: "{{ threads }}"
                devices:
                  disks:
                    - bootOrder: 1
                      disk:
                        bus: virtio
                      name: rootdisk
                    - bootOrder: 2
                      disk:
                        bus: virtio
                      name: cloudinitdisk
                  interfaces:
                    - masquerade: {}
                      name: default
                  networkInterfaceMultiqueue: true
                  rng: {}
                machine:
                  type: pc-q35-rhel8.6.0
                resources:
                  requests:
                    memory: "{{ memory }}Gi"
              evictionStrategy: LiveMigrate
              networks:
                - name: default
                  pod: {}
              terminationGracePeriodSeconds: 180
              volumes:
                - dataVolume:
                    name: "{{ vm_name }}"
                  name: rootdisk
                - cloudInitNoCloud:
                    secretRef:
                      name: "{{ vm_name }}-startup-script"
                  name: cloudinitdisk
  - name: Deploy ssh service
    redhat.openshift.k8s:
      state: present
      definition:
        kind: Service
        apiVersion: v1
        metadata:
          name: "{{ vm_name }}"
          namespace: "{{ namespace }}"
        spec:
          ipFamilies:
            - IPv4
          ports:
            - name: ssh
              protocol: TCP
              port: 22
              targetPort: 22
          internalTrafficPolicy: Cluster
          type: ClusterIP
          ipFamilyPolicy: SingleStack
          sessionAffinity: None
          selector:
            vm.kubevirt.io/name: "{{ vm_name }}"
